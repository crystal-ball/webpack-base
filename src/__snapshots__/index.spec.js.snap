// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`webpack-base returns expected dev configs 1`] = `
Object {
  "context": "/test",
  "devServer": Object {
    "contentBase": "/test/public",
    "historyApiFallback": true,
    "hot": true,
    "open": false,
    "overlay": Object {
      "errors": true,
      "warnings": false,
    },
    "port": 3000,
    "quiet": true,
  },
  "devtool": "cheap-module-eval-source-map",
  "entry": "/test/src/index.js",
  "mode": "development",
  "module": Object {
    "rules": Array [
      Object {
        "include": Array [
          "/test/src",
        ],
        "test": /\\\\\\.jsx\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
          },
          Object {
            "loader": "eslint-loader",
          },
        ],
      },
      Object {
        "test": /\\\\\\.scss\\$/,
        "use": Array [
          Object {
            "loader": "style-loader",
          },
          Object {
            "loader": "css-loader",
            "options": Object {
              "modules": Object {
                "localIdentName": "[name]-[local]--[hash:5]",
                "mode": "global",
              },
            },
          },
          Object {
            "loader": "sass-loader",
            "options": Object {
              "includePaths": Array [
                "/test/src/styles",
                "/test/src/styles/dev",
              ],
            },
          },
        ],
      },
      Object {
        "include": Array [
          "/test/src/media/icons",
        ],
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          Object {
            "loader": "svg-symbol-sprite-loader",
          },
        ],
      },
      Object {
        "exclude": Array [
          "/test/src/media/icons",
        ],
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          Object {
            "loader": "@svgr/webpack",
          },
        ],
      },
      Object {
        "test": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\)\\$/i,
        "use": Array [
          Object {
            "loader": "file-loader",
            "options": Object {
              "name": "static/media/[name].[hash:8].[ext]",
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.txt\\$/,
        "use": Array [
          Object {
            "loader": "raw-loader",
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "runtimeChunk": true,
    "splitChunks": Object {
      "chunks": "all",
      "name": true,
    },
  },
  "output": Object {
    "filename": "static/js/[name].js",
    "hashDigestLength": 12,
    "path": "/test/dist",
    "publicPath": "/",
  },
  "plugins": Array [
    ProgressBarPlugin {
      "options": Object {
        "callback": [Function],
        "clear": false,
        "format": "  Hacking time... [:bar] :percent (:elapsed seconds) :msg",
      },
    },
    EnvironmentPlugin {
      "defaultValues": Object {
        "DEBUG": false,
        "PUBLIC_PATH": "/",
      },
      "keys": Array [
        "DEBUG",
        "PUBLIC_PATH",
      ],
    },
    HtmlWebpackPlugin {
      "options": Object {
        "cache": true,
        "chunks": "all",
        "chunksSortMode": "auto",
        "compile": true,
        "excludeChunks": Array [],
        "favicon": "/test/public/favicon.ico",
        "filename": "index.html",
        "hash": false,
        "inject": true,
        "meta": Object {},
        "minify": false,
        "showErrors": true,
        "template": "/test/src/index.html",
        "templateParameters": [Function],
        "title": "Webpack App",
        "xhtml": false,
      },
    },
    SVGSymbolSpritePlugin {
      "options": Object {
        "filename": "static/media/icon-sprite.svg",
        "injectSpriteId": true,
      },
    },
    CopyPlugin {
      "options": Object {},
      "patterns": Array [
        "/test/public",
      ],
    },
    HotModuleReplacementPlugin {
      "fullBuildTimeout": 200,
      "multiStep": undefined,
      "options": Object {},
      "requestTimeout": 10000,
    },
    FriendlyErrorsWebpackPlugin {
      "compilationSuccessInfo": Object {
        "messages": Array [
          "  ðŸŽ‰  BINGO ðŸŽ‰",
          "  Application running at http://localhost:3000",
        ],
        "notes": Array [],
      },
      "formatters": Array [
        [Function],
        [Function],
        [Function],
      ],
      "onErrors": undefined,
      "shouldClearConsole": true,
      "transformers": Array [
        [Function],
        [Function],
        [Function],
      ],
    },
  ],
  "resolve": Object {
    "alias": Object {
      "@": "/test/src",
      "warning": "/test/node_modules/warning",
    },
    "extensions": Array [
      ".js",
      ".jsx",
      ".json",
    ],
    "modules": Array [
      "/test/src",
      "node_modules",
    ],
  },
}
`;

exports[`webpack-base returns expected electron dev configs 1`] = `
Object {
  "context": "/test",
  "devServer": Object {
    "contentBase": "/test/public",
    "historyApiFallback": true,
    "hot": true,
    "open": false,
    "overlay": Object {
      "errors": true,
      "warnings": false,
    },
    "port": 3000,
    "quiet": true,
  },
  "devtool": "cheap-module-eval-source-map",
  "entry": "/test/src/renderer/index.js",
  "mode": "development",
  "module": Object {
    "rules": Array [
      Object {
        "include": Array [
          "/test/src/renderer",
        ],
        "test": /\\\\\\.jsx\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
          },
          Object {
            "loader": "eslint-loader",
          },
        ],
      },
      Object {
        "test": /\\\\\\.scss\\$/,
        "use": Array [
          Object {
            "loader": "style-loader",
          },
          Object {
            "loader": "css-loader",
            "options": Object {
              "modules": Object {
                "localIdentName": "[name]-[local]--[hash:5]",
                "mode": "global",
              },
            },
          },
          Object {
            "loader": "sass-loader",
            "options": Object {
              "includePaths": Array [
                "/test/src/renderer/styles",
                "/test/src/renderer/styles/dev",
              ],
            },
          },
        ],
      },
      Object {
        "include": Array [
          "/test/src/renderer/media/icons",
        ],
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          Object {
            "loader": "svg-symbol-sprite-loader",
          },
        ],
      },
      Object {
        "exclude": Array [
          "/test/src/renderer/media/icons",
        ],
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          Object {
            "loader": "@svgr/webpack",
          },
        ],
      },
      Object {
        "test": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\)\\$/i,
        "use": Array [
          Object {
            "loader": "file-loader",
            "options": Object {
              "name": "static/media/[name].[hash:8].[ext]",
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.txt\\$/,
        "use": Array [
          Object {
            "loader": "raw-loader",
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "runtimeChunk": true,
    "splitChunks": Object {
      "chunks": "all",
      "name": true,
    },
  },
  "output": Object {
    "filename": "static/js/[name].js",
    "hashDigestLength": 12,
    "libraryTarget": "commonjs2",
    "path": "/test/src/build",
    "publicPath": "/",
  },
  "plugins": Array [
    ProgressBarPlugin {
      "options": Object {
        "callback": [Function],
        "clear": false,
        "format": "  Hacking time... [:bar] :percent (:elapsed seconds) :msg",
      },
    },
    EnvironmentPlugin {
      "defaultValues": Object {
        "DEBUG": false,
        "PUBLIC_PATH": "/",
      },
      "keys": Array [
        "DEBUG",
        "PUBLIC_PATH",
      ],
    },
    HtmlWebpackPlugin {
      "options": Object {
        "cache": true,
        "chunks": "all",
        "chunksSortMode": "auto",
        "compile": true,
        "excludeChunks": Array [],
        "favicon": "/test/public/favicon.ico",
        "filename": "index.html",
        "hash": false,
        "inject": false,
        "meta": Object {},
        "minify": false,
        "showErrors": true,
        "template": "/test/src/renderer/index.html",
        "templateParameters": [Function],
        "title": "Webpack App",
        "xhtml": false,
      },
    },
    SVGSymbolSpritePlugin {
      "options": Object {
        "filename": "static/media/icon-sprite.svg",
        "injectSpriteId": true,
      },
    },
    CopyPlugin {
      "options": Object {},
      "patterns": Array [
        "/test/public",
      ],
    },
    HotModuleReplacementPlugin {
      "fullBuildTimeout": 200,
      "multiStep": undefined,
      "options": Object {},
      "requestTimeout": 10000,
    },
    FriendlyErrorsWebpackPlugin {
      "compilationSuccessInfo": Object {
        "messages": Array [
          "  ðŸŽ‰  BINGO ðŸŽ‰",
          "  Application running at http://localhost:3000",
        ],
        "notes": Array [],
      },
      "formatters": Array [
        [Function],
        [Function],
        [Function],
      ],
      "onErrors": undefined,
      "shouldClearConsole": true,
      "transformers": Array [
        [Function],
        [Function],
        [Function],
      ],
    },
  ],
  "resolve": Object {
    "alias": Object {
      "@": "/test/src/renderer",
      "warning": "/test/node_modules/warning",
    },
    "extensions": Array [
      ".js",
      ".jsx",
      ".json",
    ],
    "modules": Array [
      "/test/src/renderer",
      "node_modules",
    ],
  },
  "target": "electron-renderer",
}
`;

exports[`webpack-base returns expected electron prod configs 1`] = `
Object {
  "bail": true,
  "context": "/test",
  "devtool": "source-map",
  "entry": "/test/src/renderer/index.js",
  "mode": "production",
  "module": Object {
    "rules": Array [
      Object {
        "include": Array [
          "/test/src/renderer",
        ],
        "test": /\\\\\\.jsx\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
          },
          Object {
            "loader": "eslint-loader",
          },
        ],
      },
      Object {
        "test": /\\\\\\.scss\\$/,
        "use": Array [
          "/test/path/to/mini-css-extract-loader",
          Object {
            "loader": "css-loader",
            "options": Object {
              "modules": Object {
                "localIdentName": "[name]-[local]--[hash:5]",
                "mode": "global",
              },
            },
          },
          Object {
            "loader": "postcss-loader",
            "options": Object {
              "plugins": Array [
                [Function],
                [Function],
              ],
            },
          },
          Object {
            "loader": "sass-loader",
            "options": Object {
              "includePaths": Array [
                "/test/src/renderer/styles",
                "/test/src/renderer/styles/prod",
              ],
            },
          },
        ],
      },
      Object {
        "include": Array [
          "/test/src/renderer/media/icons",
        ],
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          Object {
            "loader": "svg-symbol-sprite-loader",
          },
        ],
      },
      Object {
        "exclude": Array [
          "/test/src/renderer/media/icons",
        ],
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          Object {
            "loader": "@svgr/webpack",
          },
        ],
      },
      Object {
        "test": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\)\\$/i,
        "use": Array [
          Object {
            "loader": "file-loader",
            "options": Object {
              "name": "static/media/[name].[hash:8].[ext]",
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.txt\\$/,
        "use": Array [
          Object {
            "loader": "raw-loader",
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "runtimeChunk": true,
    "splitChunks": Object {
      "chunks": "all",
      "name": true,
    },
  },
  "output": Object {
    "filename": "static/js/[name].js",
    "hashDigestLength": 12,
    "libraryTarget": "commonjs2",
    "path": "/test/src/build",
    "publicPath": "/",
  },
  "performance": Object {
    "assetFilter": [Function],
    "hints": "warning",
    "maxAssetSize": 250000,
    "maxEntrypointSize": 500000,
  },
  "plugins": Array [
    ProgressBarPlugin {
      "options": Object {
        "callback": [Function],
        "clear": false,
        "format": "  Hacking time... [:bar] :percent (:elapsed seconds) :msg",
      },
    },
    EnvironmentPlugin {
      "defaultValues": Object {
        "DEBUG": false,
        "PUBLIC_PATH": "/",
      },
      "keys": Array [
        "DEBUG",
        "PUBLIC_PATH",
      ],
    },
    HtmlWebpackPlugin {
      "options": Object {
        "cache": true,
        "chunks": "all",
        "chunksSortMode": "auto",
        "compile": true,
        "excludeChunks": Array [],
        "favicon": "/test/public/favicon.ico",
        "filename": "index.html",
        "hash": false,
        "inject": false,
        "meta": Object {},
        "minify": false,
        "showErrors": true,
        "template": "/test/src/renderer/index.html",
        "templateParameters": [Function],
        "title": "Webpack App",
        "xhtml": false,
      },
    },
    SVGSymbolSpritePlugin {
      "options": Object {
        "filename": "static/media/icon-sprite.svg",
        "injectSpriteId": true,
      },
    },
    CopyPlugin {
      "options": Object {},
      "patterns": Array [
        "/test/public",
      ],
    },
    NamedModulesPlugin {
      "options": Object {},
    },
    MonitorStats {
      "options": Object {
        "capture": true,
        "jsonOpts": Object {
          "chunkModules": true,
          "source": false,
        },
        "launch": undefined,
        "port": 8081,
        "target": "../monitor/stats.json",
      },
    },
    CleanWebpackPlugin {
      "apply": [Function],
      "cleanAfterEveryBuildPatterns": Array [],
      "cleanOnceBeforeBuildPatterns": Array [
        "**/*",
      ],
      "cleanStaleWebpackAssets": true,
      "currentAssets": Array [],
      "dangerouslyAllowCleanPatternsOutsideProject": false,
      "dry": false,
      "handleDone": [Function],
      "handleInitial": [Function],
      "initialClean": false,
      "outputPath": "",
      "protectWebpackAssets": true,
      "removeFiles": [Function],
      "verbose": false,
    },
    DuplicatePackageCheckerPlugin {
      "options": Object {
        "emitError": false,
        "exclude": null,
        "showHelp": true,
        "strict": true,
        "verbose": true,
      },
    },
    MiniCSSExtractPlugin {
      "options": Object {
        "chunkFilename": "static/css/[name].css",
        "filename": "static/css/[name].css",
      },
    },
    CompressionPlugin {
      "options": Object {
        "algorithm": [Function],
        "cache": false,
        "compressionOptions": Object {
          "level": 9,
        },
        "deleteOriginalAssets": false,
        "exclude": undefined,
        "filename": "[path][query]",
        "include": undefined,
        "minRatio": 0.8,
        "test": undefined,
        "threshold": 0,
      },
    },
  ],
  "resolve": Object {
    "alias": Object {
      "@": "/test/src/renderer",
      "warning": "/test/node_modules/warning",
    },
    "extensions": Array [
      ".js",
      ".jsx",
      ".json",
    ],
    "modules": Array [
      "/test/src/renderer",
      "node_modules",
    ],
  },
  "stats": Object {
    "excludeAssets": [Function],
    "modules": false,
  },
  "target": "electron-renderer",
}
`;

exports[`webpack-base returns expected prod configs 1`] = `
Object {
  "bail": true,
  "context": "/test",
  "devtool": "source-map",
  "entry": "/test/src/index.js",
  "mode": "production",
  "module": Object {
    "rules": Array [
      Object {
        "include": Array [
          "/test/src",
        ],
        "test": /\\\\\\.jsx\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
          },
          Object {
            "loader": "eslint-loader",
          },
        ],
      },
      Object {
        "test": /\\\\\\.scss\\$/,
        "use": Array [
          "/test/path/to/mini-css-extract-loader",
          Object {
            "loader": "css-loader",
            "options": Object {
              "modules": Object {
                "localIdentName": "[name]-[local]--[hash:5]",
                "mode": "global",
              },
            },
          },
          Object {
            "loader": "postcss-loader",
            "options": Object {
              "plugins": Array [
                [Function],
                [Function],
              ],
            },
          },
          Object {
            "loader": "sass-loader",
            "options": Object {
              "includePaths": Array [
                "/test/src/styles",
                "/test/src/styles/prod",
              ],
            },
          },
        ],
      },
      Object {
        "include": Array [
          "/test/src/media/icons",
        ],
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          Object {
            "loader": "svg-symbol-sprite-loader",
          },
        ],
      },
      Object {
        "exclude": Array [
          "/test/src/media/icons",
        ],
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          Object {
            "loader": "@svgr/webpack",
          },
        ],
      },
      Object {
        "test": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\)\\$/i,
        "use": Array [
          Object {
            "loader": "file-loader",
            "options": Object {
              "name": "static/media/[name].[hash:8].[ext]",
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.txt\\$/,
        "use": Array [
          Object {
            "loader": "raw-loader",
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "runtimeChunk": true,
    "splitChunks": Object {
      "chunks": "all",
      "name": true,
    },
  },
  "output": Object {
    "filename": "static/js/[name].[chunkhash].js",
    "hashDigestLength": 12,
    "path": "/test/dist",
    "publicPath": "/",
  },
  "performance": Object {
    "assetFilter": [Function],
    "hints": "warning",
    "maxAssetSize": 250000,
    "maxEntrypointSize": 500000,
  },
  "plugins": Array [
    ProgressBarPlugin {
      "options": Object {
        "callback": [Function],
        "clear": false,
        "format": "  Hacking time... [:bar] :percent (:elapsed seconds) :msg",
      },
    },
    EnvironmentPlugin {
      "defaultValues": Object {
        "DEBUG": false,
        "PUBLIC_PATH": "/",
      },
      "keys": Array [
        "DEBUG",
        "PUBLIC_PATH",
      ],
    },
    HtmlWebpackPlugin {
      "options": Object {
        "cache": true,
        "chunks": "all",
        "chunksSortMode": "auto",
        "compile": true,
        "excludeChunks": Array [],
        "favicon": "/test/public/favicon.ico",
        "filename": "index.html",
        "hash": false,
        "inject": true,
        "meta": Object {},
        "minify": false,
        "showErrors": true,
        "template": "/test/src/index.html",
        "templateParameters": [Function],
        "title": "Webpack App",
        "xhtml": false,
      },
    },
    SVGSymbolSpritePlugin {
      "options": Object {
        "filename": "static/media/icon-sprite.[chunkhash].svg",
        "injectSpriteId": true,
      },
    },
    CopyPlugin {
      "options": Object {},
      "patterns": Array [
        "/test/public",
      ],
    },
    NamedModulesPlugin {
      "options": Object {},
    },
    MonitorStats {
      "options": Object {
        "capture": true,
        "jsonOpts": Object {
          "chunkModules": true,
          "source": false,
        },
        "launch": undefined,
        "port": 8081,
        "target": "../monitor/stats.json",
      },
    },
    CleanWebpackPlugin {
      "apply": [Function],
      "cleanAfterEveryBuildPatterns": Array [],
      "cleanOnceBeforeBuildPatterns": Array [
        "**/*",
      ],
      "cleanStaleWebpackAssets": true,
      "currentAssets": Array [],
      "dangerouslyAllowCleanPatternsOutsideProject": false,
      "dry": false,
      "handleDone": [Function],
      "handleInitial": [Function],
      "initialClean": false,
      "outputPath": "",
      "protectWebpackAssets": true,
      "removeFiles": [Function],
      "verbose": false,
    },
    DuplicatePackageCheckerPlugin {
      "options": Object {
        "emitError": false,
        "exclude": null,
        "showHelp": true,
        "strict": true,
        "verbose": true,
      },
    },
    MiniCSSExtractPlugin {
      "options": Object {
        "chunkFilename": "static/css/[name].[chunkhash].css",
        "filename": "static/css/[name].[chunkhash].css",
      },
    },
    CompressionPlugin {
      "options": Object {
        "algorithm": [Function],
        "cache": false,
        "compressionOptions": Object {
          "level": 9,
        },
        "deleteOriginalAssets": false,
        "exclude": undefined,
        "filename": "[path][query]",
        "include": undefined,
        "minRatio": 0.8,
        "test": undefined,
        "threshold": 0,
      },
    },
  ],
  "resolve": Object {
    "alias": Object {
      "@": "/test/src",
      "warning": "/test/node_modules/warning",
    },
    "extensions": Array [
      ".js",
      ".jsx",
      ".json",
    ],
    "modules": Array [
      "/test/src",
      "node_modules",
    ],
  },
  "stats": Object {
    "excludeAssets": [Function],
    "modules": false,
  },
}
`;

exports[`webpack-base returns loader and plugin components 1`] = `
Object {
  "loaders": Object {
    "fileLoader": Object {
      "test": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\)\\$/i,
      "use": Array [
        Object {
          "loader": "file-loader",
          "options": Object {
            "name": "static/media/[name].[hash:8].[ext]",
          },
        },
      ],
    },
    "jsLoader": Object {
      "include": Array [
        "/test/src",
      ],
      "test": /\\\\\\.jsx\\?\\$/,
      "use": Array [
        Object {
          "loader": "babel-loader",
        },
        Object {
          "loader": "eslint-loader",
        },
      ],
    },
    "rawLoader": Object {
      "test": /\\\\\\.txt\\$/,
      "use": Array [
        Object {
          "loader": "raw-loader",
        },
      ],
    },
    "sassLoader": Object {
      "test": /\\\\\\.scss\\$/,
      "use": Array [
        Object {
          "loader": "style-loader",
        },
        Object {
          "loader": "css-loader",
          "options": Object {
            "modules": Object {
              "localIdentName": "[name]-[local]--[hash:5]",
              "mode": "global",
            },
          },
        },
        Object {
          "loader": "sass-loader",
          "options": Object {
            "includePaths": Array [
              "/test/src/styles",
              "/test/src/styles/dev",
            ],
          },
        },
      ],
    },
    "svgComponentLoader": Object {
      "exclude": Array [
        "/test/src/media/icons",
      ],
      "test": /\\\\\\.svg\\$/,
      "use": Array [
        Object {
          "loader": "@svgr/webpack",
        },
      ],
    },
    "svgSpriteLoader": Object {
      "include": Array [
        "/test/src/media/icons",
      ],
      "test": /\\\\\\.svg\\$/,
      "use": Array [
        Object {
          "loader": "svg-symbol-sprite-loader",
        },
      ],
    },
  },
  "plugins": Object {
    "copyPlugin": CopyPlugin {
      "options": Object {},
      "patterns": Array [
        "/test/public",
      ],
    },
    "environmentPlugin": EnvironmentPlugin {
      "defaultValues": Object {
        "DEBUG": false,
        "PUBLIC_PATH": "/",
      },
      "keys": Array [
        "DEBUG",
        "PUBLIC_PATH",
      ],
    },
    "friendlyErrorsPlugin": FriendlyErrorsWebpackPlugin {
      "compilationSuccessInfo": Object {
        "messages": Array [
          "  ðŸŽ‰  BINGO ðŸŽ‰",
          "  Application running at http://localhost:3000",
        ],
        "notes": Array [],
      },
      "formatters": Array [
        [Function],
        [Function],
        [Function],
      ],
      "onErrors": undefined,
      "shouldClearConsole": true,
      "transformers": Array [
        [Function],
        [Function],
        [Function],
      ],
    },
    "hotModuleReplacementPlugin": HotModuleReplacementPlugin {
      "fullBuildTimeout": 200,
      "multiStep": undefined,
      "options": Object {},
      "requestTimeout": 10000,
    },
    "htmlPlugin": HtmlWebpackPlugin {
      "options": Object {
        "cache": true,
        "chunks": "all",
        "chunksSortMode": "auto",
        "compile": true,
        "excludeChunks": Array [],
        "favicon": "/test/public/favicon.ico",
        "filename": "index.html",
        "hash": false,
        "inject": true,
        "meta": Object {},
        "minify": false,
        "showErrors": true,
        "template": "/test/src/index.html",
        "templateParameters": [Function],
        "title": "Webpack App",
        "xhtml": false,
      },
    },
    "progressBarPlugin": ProgressBarPlugin {
      "options": Object {
        "callback": [Function],
        "clear": false,
        "format": "  Hacking time... [:bar] :percent (:elapsed seconds) :msg",
      },
    },
    "svgSymbolSpritePlugin": SVGSymbolSpritePlugin {
      "options": Object {
        "filename": "static/media/icon-sprite.svg",
        "injectSpriteId": true,
      },
    },
  },
}
`;
